//SHAPE

<Window x:Class="shape.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="350" Width="525">
    <Grid>
        <Ellipse Fill="#FFF7F76A" HorizontalAlignment="Left" Height="219" Stroke="Black" VerticalAlignment="Top" Width="226" Margin="149,32,0,0"/>
        <Ellipse Fill="#FFFB8FA3" HorizontalAlignment="Left" Height="82" Margin="216,149,0,0" Stroke="Black" VerticalAlignment="Top" Width="90"/>
        <Ellipse Fill="#FF010115" HorizontalAlignment="Left" Height="32" Margin="200,75,0,0" Stroke="Black" VerticalAlignment="Top" Width="30"/>
        <Ellipse Fill="#FF020211" HorizontalAlignment="Left" Height="32" Margin="295,75,0,0" Stroke="Black" VerticalAlignment="Top" Width="29"/>

    </Grid>
</Window>

//EMPLOYEE REGISTRATION FORM

XAML:

<Window x:Class="shape.EmpRegForm"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="EmpRegForm" Height="650" Width="500">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50*"/>
            <RowDefinition Height="50*"/>
            <RowDefinition Height="50*"/>
            <RowDefinition Height="50*"/>
            <RowDefinition Height="50*"/>
            <RowDefinition Height="50*"/>
            <RowDefinition Height="50*"/>
            <RowDefinition Height="50*"/>
            <RowDefinition Height="50*"/>
            <RowDefinition Height="50*"/>
            <RowDefinition Height="50*"/>
            <RowDefinition Height="50*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="29*"/>
            <ColumnDefinition Width="62*"/>
            <ColumnDefinition Width="9*"/>
            <ColumnDefinition Width="66*"/>
            <ColumnDefinition Width="30*"/>
        </Grid.ColumnDefinitions>
        <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="EMPLOYEE REGISTRATION FORM" VerticalAlignment="Top" Margin="40,16,0,0" Grid.ColumnSpan="4" Width="379" Height="26" FontSize="20" Grid.Column="1"/>
        <TextBlock HorizontalAlignment="Left" Margin="28,10,0,0" Grid.Row="2" TextWrapping="Wrap" Text="Emp Name" VerticalAlignment="Top" Width="86" Grid.Column="1" Height="29" FontSize="16"/>
        <TextBox x:Name="textBox" Grid.Column="3" HorizontalAlignment="Left" Height="29" Margin="2,13,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="154" RenderTransformOrigin="0.58,0.512" Grid.Row="2"/>
        <TextBlock Grid.Column="1" HorizontalAlignment="Left" Margin="28,10,0,0" Grid.Row="4" TextWrapping="Wrap" Text="Date of Birth" VerticalAlignment="Top" Width="104" Height="19" FontSize="16"/>
        <DatePicker x:Name="datePick" Grid.Column="3" HorizontalAlignment="Left" Margin="2,10,0,0" Grid.Row="4" VerticalAlignment="Top" Width="154" Height="29"/>
        <GroupBox Grid.Column="3" Header="Gender" HorizontalAlignment="Left" Grid.Row="6" VerticalAlignment="Bottom" Height="84" Width="154" Grid.RowSpan="2" Margin="2,0,0,10">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Width="149" Margin="0,-19,-26,1" Height="80" VerticalAlignment="Bottom">
                <RadioButton x:Name="radioButton1" Content="Male" Height="20" Width="75"/>
                <RadioButton x:Name="radioButton2" Content="Female" Margin="0,31,0,28">
                    <RadioButton.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="-0.477"/>
                            <TranslateTransform X="-0.004" Y="0.488"/>
                        </TransformGroup>
                    </RadioButton.RenderTransform>
                </RadioButton>
            </StackPanel>
        </GroupBox>
        <GroupBox Grid.Column="3" Header="Skills" HorizontalAlignment="Left" Grid.Row="8" VerticalAlignment="Top" Width="156" Height="51"/>
        <StackPanel Grid.Column="3" HorizontalAlignment="Left" Height="49" Margin="10,3,0,0" Grid.Row="8" VerticalAlignment="Top" Width="146"/>
        <CheckBox x:Name="checkSkill1" Content="C" Grid.Column="3" HorizontalAlignment="Left" Margin="10,26,0,0" Grid.Row="8" VerticalAlignment="Top" RenderTransformOrigin="0.65,1.986"/>
        <CheckBox x:Name="checkSkill2" Content="C++" Grid.Column="3" HorizontalAlignment="Left" Margin="54,26,0,0" Grid.Row="8" VerticalAlignment="Top"/>
        <CheckBox x:Name="checkSkill3" Content="C#" Grid.Column="3" HorizontalAlignment="Left" Margin="103,26,0,7" Grid.Row="8"/>
        <TextBlock Grid.Column="1" HorizontalAlignment="Left" Margin="42,10,0,39" Grid.Row="9" TextWrapping="Wrap" Text="State" Width="103" FontSize="16" Grid.RowSpan="2"/>
        <TextBlock Grid.Column="1" HorizontalAlignment="Left" Margin="42,10,0,0" Grid.Row="10" TextWrapping="Wrap" Text="City" VerticalAlignment="Top" FontSize="16" Width="72"/>
        <ComboBox x:Name="comboBox" Grid.Column="3" HorizontalAlignment="Left" Margin="2,19,0,0" Grid.Row="9" VerticalAlignment="Top" Width="154" IsDropDownOpen="True" SelectionChanged="comboBox_SelectionChanged">
            <ComboBoxItem IsSelected="True">Select a state</ComboBoxItem>
            <ComboBoxItem>WestBengal</ComboBoxItem>
            <ComboBoxItem>Maharashtra</ComboBoxItem>
            <ComboBoxItem>Karnataka</ComboBoxItem>
        </ComboBox>
        <ComboBox x:Name="comboBox1" Grid.Column="3" HorizontalAlignment="Left" Margin="2,20,0,0" Grid.Row="10" VerticalAlignment="Top" Width="154" RenderTransformOrigin="0.599,0.528">
            <ComboBoxItem>Kolkata</ComboBoxItem>
            <ComboBoxItem>Mumbai</ComboBoxItem>
            <ComboBoxItem>Bangalore</ComboBoxItem>
        
        </ComboBox>
        <Button Content="Submit" Grid.Column="3" HorizontalAlignment="Left" Margin="34,10,0,0" Grid.Row="11" VerticalAlignment="Top" Width="101" Height="28" Click="Button_Click_1"/>

    </Grid>
</Window>

PROGRAM:

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;

namespace shape
{
    /// <summary>
    /// Interaction logic for EmpRegForm.xaml
    /// </summary>
    public partial class EmpRegForm : Window
    {
        public EmpRegForm()
        {
            
            InitializeComponent();

            
        }

        private void CheckBox_Checked_1(object sender, RoutedEventArgs e)
        {
            
        }

        private void comboBox_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            int index = comboBox.SelectedIndex;


            if (index == 0)
            {
                return;
            }

            string state = ((ListBoxItem)comboBox.SelectedItem).Content.ToString();

            comboBox1.Items.Clear();
            comboBox1.Items.Add("Select a City");


            if (state == "Maharashtra")
            {
                comboBox1.Items.Add("Mumbai");
                comboBox1.Items.Add("Pune");
                comboBox1.Items.Add("Nasik");
            }

            else if (state == "WestBengal")
            {
                comboBox1.Items.Add("Kolkata");
                comboBox1.Items.Add("Darjeeling");
                comboBox1.Items.Add("Sodepur");
            }

            else if (state == "Karnataka")
            {
                comboBox1.Items.Add("Bangalore");
                comboBox1.Items.Add("Mysore");
                comboBox1.Items.Add("Udupi");
            }
        }

        private void Button_Click_1(object sender, RoutedEventArgs e)
        {
            StringBuilder data = new StringBuilder();
            data.Append(textBox.Text + "\n");
            DateTime dt = (DateTime)datePick.SelectedDate;
            data.Append(dt.ToShortDateString() + "\n");

            if (radioButton1.IsChecked == true)
                data.Append("Male" + "\n");
            else
                data.Append("Female" + "\n");

            if (checkSkill1.IsChecked == true)
                data.Append("C ");
            if (checkSkill2.IsChecked == true)
                data.Append("C++ ");
            if (checkSkill3.IsChecked == true)
                data.Append("C# ");
            data.Append("\n");

            data.Append(comboBox1.Text + "(" + comboBox.Text + ")");
            MessageBox.Show(data.ToString());

        }
    }
}


//SLIDER

<Window x:Class="shape.Slider"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Slider" Height="400" Width="400">
    <Grid>
        <StackPanel Orientation="Vertical" HorizontalAlignment="Left" Height="322" Margin="10,10,0,0" VerticalAlignment="Top" Width="372">
            <Slider x:Name="sliderFontSize" Height="30" Margin="0,10,10,10" ValueChanged="sliderFontSize_ValueChanged"/>
            <TextBlock Margin="0,10,10,10" TextWrapping="Wrap"
                       FontSize="{Binding ElementName=sliderFontSize, Path=Value, Mode=TwoWay}"
                       Text="Simple Text"/>
            <StackPanel Orientation="Horizontal" >
                <TextBlock TextWrapping="Wrap" FontSize="16" Height="25" Width="101" >Exact Size : </TextBlock>

                <TextBox x:Name="lblSampleText" Text="{Binding ElementName=lblSampleText, Path=FontSize, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Height="20" TextWrapping="Wrap" Width="137" FontSize="14"/>
            </StackPanel>
        </StackPanel>
    </Grid>
</Window>

//DYNAMIC

XML:

<Window x:Class="shape.Dynamic"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Dynamic" Height="300" Width="300" Loaded="Window_Loaded_1">
    <Window.Resources>
        
        <SolidColorBrush x:Key="DynamicBG"/>
    </Window.Resources>
    <Grid>
        <StackPanel HorizontalAlignment="Left" Height="250" Margin="10,10,0,0" VerticalAlignment="Top" Width="272">
            <Label Content="Hello" Background="{DynamicResource DynamicBG}"/>
       
                
       
            <DockPanel Height="210" Margin="0,0,10,0">
                <Button Content="Click" Click="Button_Click_1" Background="CadetBlue" Height="37" VerticalAlignment="Top" Width="74" Margin="0,173,0,0"/>
            </DockPanel>
        </StackPanel>

    </Grid>
</Window>


PROGRAM:
(For window_loaded, click on window, then properties thn select the window loaded button)
    

    public partial class Dynamic : Window
    {
        public Dynamic()
        {
            InitializeComponent();
        }

        private void Button_Click_1(object sender, RoutedEventArgs e)
        {
            this.Resources["DynamicBG"] = new SolidColorBrush(Colors.YellowGreen);
        }

        private void Window_Loaded_1(object sender, RoutedEventArgs e)
        {
            this.Resources["DynamicBG"] = new SolidColorBrush(Colors.Red);
        }
    }
}

//ROUTED EVENT

XML:

<Window x:Class="shape.RoutedEvents"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="RoutedEvents" Height="300" Width="300"
        ButtonBase.Click ="Window_Click"
        PreviewMouseDown ="Window_PreviewClick">
    <Grid>
        <StackPanel Margin="20"
                    ButtonBase.Click ="StackPanel_Click_1" 
                    ButtonBase.PreviewMouseDown ="StackPanel_PreviewClick">
            <StackPanel Margin="10">
                <TextBlock x:Name="txt1" FontSize="18" Margin="5" Text="TextBlock - "/>
            </StackPanel>
            <Button Content="Click Me" Margin="10" Click="Button_Click" Width="80"/>

        </StackPanel>

    </Grid>
</Window>

PROGRAM:

namespace shape
{
    /// <summary>
    /// Interaction logic for RoutedEvents.xaml
    /// </summary>
    public partial class RoutedEvents : Window
    {
        string Text;
        public RoutedEvents()
        {
            InitializeComponent();
        }

        private void Button_Click(object sender, RoutedEventArgs e)
        {
            Text += "--Button is Clicked";
            txt1.Text = Text;
        }

        private void StackPanel_Click_1(object sender, RoutedEventArgs e)
        {
            Text += "--Click bubblled from Stack Panel";
            txt1.Text = Text;
        }

        private void Window_Click(object sender, RoutedEventArgs e)
        {
            Text += "--Click bubbled to window";
            txt1.Text = Text;
        }

        private void Button_PreviewClick(object sender, MouseButtonEventArgs e)
        {

            Text += "--Button is clicked";
            txt1.Text = Text;
        }


        private void StackPanel_PreviewClick(object sender, MouseButtonEventArgs e)
        {

            Text += "--Click tunneled from stack panel";
            txt1.Text = Text;
        }

        private void Window_PreviewClick(object sender, MouseButtonEventArgs e)
        {

            Text += "--Click tunneled from Window";
            txt1.Text = Text;
        }
    }
}

(to show a text twice, edit this on button
<Button Content="Click Me" PreviewMouseDown="Button_PreviewClick" Margin="10" Click="Button_Click" Width="80"/>)